<common:LayoutAwarePage
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:MetroExplorer.Pages.MapPage"
	xmlns:common="using:MetroExplorer.Common"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:MapsControl="using:MetroExplorer.Components.Maps" 
	xmlns:Maps="using:Bing.Maps"
	x:Name="pageRoot"
	x:Class="MetroExplorer.Pages.MapPage.PageMap"
	DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Mode=Self}}"
	d:ExtensionType="Search"
	mc:Ignorable="d">

	<common:LayoutAwarePage.Resources>

		<common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

		<!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
		<x:String x:Key="AppName">My Application</x:String>
		<ControlTemplate x:Key="ButtonBaseControlTemplate" TargetType="ButtonBase">
			<Grid x:Name="RootGrid" Width="100" Background="Transparent">

				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="ApplicationViewStates">
						<VisualState x:Name="FullScreenLandscape"/>
						<VisualState x:Name="Filled"/>
						<VisualState x:Name="FullScreenPortrait">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
									<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
									<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Snapped">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
									<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
									<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="PointerOver">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
								<ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.ZIndex)" Storyboard.TargetName="path">
									<DiscreteObjectKeyFrame KeyTime="0">
										<DiscreteObjectKeyFrame.Value>
											<x:Int32>1</x:Int32>
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="FocusStates">
						<VisualState x:Name="Focused">
							<Storyboard>
								<DoubleAnimation
									Storyboard.TargetName="FocusVisualWhite"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0"/>
								<DoubleAnimation
									Storyboard.TargetName="FocusVisualBlack"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0"/>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Unfocused" />
						<VisualState x:Name="PointerFocused" />
					</VisualStateGroup>
					<VisualStateGroup x:Name="CheckStates">
						<VisualState x:Name="Checked">
							<Storyboard>
								<DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
									<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Unchecked"/>
						<VisualState x:Name="Indeterminate"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
					<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                        <Path x:Name="path" Stretch="Fill" Fill="White" Data="F1 M 344.208,367.333L 358,332L 330.417,332L 344.208,367.333 Z " UseLayoutRounding="False" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20"/>
                        <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
						<TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0"/>
						<ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center" Visibility="Collapsed"/>
					</Grid>
					<TextBlock
						x:Name="TextLabel"
						Text="{TemplateBinding AutomationProperties.Name}"
						Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
						Margin="0,0,2,0"
						FontSize="12"
						TextAlignment="Center"
						Width="88"
						MaxHeight="32"
						TextTrimming="WordEllipsis"
						Style="{StaticResource BasicTextStyle}"/>
				</StackPanel>
				<Rectangle
					x:Name="FocusVisualWhite"
					IsHitTestVisible="False"
					Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
					StrokeEndLineCap="Square"
					StrokeDashArray="1,1"
					Opacity="0"
					StrokeDashOffset="1.5"/>
				<Rectangle
					x:Name="FocusVisualBlack"
					IsHitTestVisible="False"
					Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
					StrokeEndLineCap="Square"
					StrokeDashArray="1,1"
					Opacity="0"
					StrokeDashOffset="0.5"/>

			</Grid>
		</ControlTemplate>
	</common:LayoutAwarePage.Resources>
	<common:LayoutAwarePage.BottomAppBar>
        <AppBar FontFamily="Global User Interface" Background="#FF1e90cd" BorderBrush="Transparent">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                
				<Button x:Name="ButtonUnMark" Content="UnMark" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding UnMarkable, Converter={StaticResource BooleanToVisibilityConverter}}" Click="ButtonUnMarkClick"/>
				<Button x:Name="ButtonMark" Content="Mark" HorizontalAlignment="Left" VerticalAlignment="Center" Click="ButtonMarkClick" Visibility="{Binding Markable, Converter={StaticResource BooleanToVisibilityConverter}}"/>
				<Button x:Name="ButtonLink" Content="Link" HorizontalAlignment="Left" VerticalAlignment="Center" Click="ButtonLinkClick" Visibility="{Binding Linkable, Converter={StaticResource BooleanToVisibilityConverter}}"/>
				<Button x:Name="ButtonLinkExplorer" Content="Link From Explorer" HorizontalAlignment="Left" Visibility="{Binding Linkable, Converter={StaticResource BooleanToVisibilityConverter}}" Click="ButtonLinkExplorerClick"/>
				<Button x:Name="ButtonShow" Content="Show" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,0,0,0" Visibility="{Binding FolderSelected, Converter={StaticResource BooleanToVisibilityConverter}}" Click="ButtonShowClick"/>
				<Button x:Name="ButtonDelete" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,0,0,0" Visibility="{Binding FolderSelected, Converter={StaticResource BooleanToVisibilityConverter}}" Click="ButtonDeleteClick"/>
                <Button HorizontalAlignment="Right" VerticalAlignment="Stretch"
                        x:Uid="UidMapPageAppBarAddLinkPin">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
                            <Setter Property="AutomationProperties.Name" Value=""/>
                            <Setter Property="Content" Value="&#xE10F;"/>
                            <Setter Property="Template" Value="{StaticResource ButtonBaseControlTemplate}"/>
                        </Style>
                    </Button.Style>
                </Button>
                <Button HorizontalAlignment="Right" VerticalAlignment="Stretch"
                        x:Uid="UidMapPageAppBarMyPosition">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
                            <Setter Property="AutomationProperties.Name" Value=""/>
                            <Setter Property="Content" Value="&#xE10F;"/>
                        </Style>
                    </Button.Style>
                </Button>
                <Button HorizontalAlignment="Right" VerticalAlignment="Stretch"
                        x:Uid="UidMapPageAppBarSearchButton">
				    <Button.Style>
						<Style TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
							<Setter Property="AutomationProperties.Name" Value=""/>
							<Setter Property="Content" Value="&#xE11A;"/>
						</Style>
					</Button.Style>
				</Button>
			</StackPanel>
		</AppBar>
	</common:LayoutAwarePage.BottomAppBar>
	<common:LayoutAwarePage.TopAppBar>
		<AppBar BorderThickness="0" BorderBrush="Transparent">
			<AppBar.Background>
                <SolidColorBrush Color="#FF1e90cd"/>
			</AppBar.Background>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="28*"/>
					<ColumnDefinition Width="645*"/>
				</Grid.ColumnDefinitions>
				<StackPanel Orientation="Horizontal">
					<Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0"/>
				</StackPanel>
				<StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Width="0"/>
			</Grid>
		</AppBar>
	</common:LayoutAwarePage.TopAppBar>

	<!--
		This grid acts as a root panel for the page that defines two rows:
		* Row 0 contains the back button and page title
		* Row 1 contains the rest of the page layout
	-->
	<Grid Style="{StaticResource LayoutRootStyle}">

		<VisualStateManager.VisualStateGroups>

			<!-- Visual states reflect the application's view state -->
			<VisualStateGroup x:Name="ApplicationViewStates">
				<VisualState x:Name="FullScreenLandscape"/>
				<VisualState x:Name="Filled"/>

				<!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
				<VisualState x:Name="FullScreenPortrait">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>

				<!-- The back button and title have different styles when snapped -->
				<VisualState x:Name="Snapped">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<!-- Back button and page title -->
		<Maps:Map x:Name="MapView" Grid.Row="1" Credentials="Avs9-NFwIrWEbtFgLLePRSktqWRMX8X5Kmz5NiZyxgzL0JCG-S0K65VltPBX3uV1" Tapped="MapTapped"/>
	</Grid>
</common:LayoutAwarePage>
